<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from src/deliverybot_description/urdf/deliverybot.urdf.xacro | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<robot name="deliverybot_sim">
  <!-- Launch args-->
  <!-- scan (2D lidar)-->
  <!-- RVIZ Materials -->
  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>
  <material name="grey">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="anthracite">
    <color rgba="0.219 0.2431 0.2588 1"/>
  </material>
  <!-- LINKS ===========================================================-->
  <link name="base_link"/>
  <!-- Body link -->
  <link name="body_link">
    <inertial>
      <origin rpy="0.0 0.0 0.0" xyz="-0.0055 -0.0002 -0.0014"/>
      <mass value="21.828734672527542"/>
      <inertia ixx="197.9644035402808" ixy="-1.9097414111524087" ixz="-0.1499079161071719" iyy="214.31325562158773" iyz="0.24907860474737206" izz="235.7642298262934"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/deliverybot_body.obj" scale="1 1 1"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </visual>
    <collision>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/deliverybot_body_collision.stl" scale="1 1 1"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
  </link>
  <!-- Steering links -->
  <link name="steering_left_link">
    <inertial>
      <mass value="0.25"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0001" radius="0.0001"/>
      </geometry>
    </visual>
  </link>
  <link name="steering_right_link">
    <inertial>
      <mass value="0.25"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.0001" radius="0.0001"/>
      </geometry>
    </visual>
  </link>
  <!-- Front Wheels Links -->
  <link name="wheel_front_left_link">
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="2.26428"/>
      <inertia ixx="0.142467259859483" ixy="0" ixz="0" iyy="0.142467259859483" iyz="0" izz="0.232177637223095"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/deliverybot_wheel_left.obj" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1869477" radius="0.226428"/>
      </geometry>
    </collision>
  </link>
  <link name="wheel_front_right_link">
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="2.26428"/>
      <inertia ixx="0.142467259859483" ixy="0" ixz="0" iyy="0.142467259859483" iyz="0" izz="0.232177637223095"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/deliverybot_wheel_right.obj" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1869477" radius="0.226428"/>
      </geometry>
    </collision>
  </link>
  <!--Rear Wheels Links -->
  <link name="wheel_rear_left_link">
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="2.26428"/>
      <inertia ixx="0.142467259859483" ixy="0" ixz="0" iyy="0.142467259859483" iyz="0" izz="0.232177637223095"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/deliverybot_wheel_left.obj" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1869477" radius="0.226428"/>
      </geometry>
    </collision>
  </link>
  <link name="wheel_rear_right_link">
    <inertial>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <mass value="2.26428"/>
      <inertia ixx="0.142467259859483" ixy="0" ixz="0" iyy="0.142467259859483" iyz="0" izz="0.232177637223095"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0.0 0.0 0.0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/deliverybot_wheel_right.obj" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="1.57 0 0" xyz="0 0 0"/>
      <geometry>
        <cylinder length="0.1869477" radius="0.226428"/>
      </geometry>
    </collision>
  </link>
  <!-- JOINTS =================================================================-->
  <joint name="base_body_joint" type="fixed">
    <parent link="base_link"/>
    <child link="body_link"/>
    <origin rpy="0 0 0" xyz="0 0 0.802"/>
  </joint>
  <!-- Steering joints-->
  <joint name="steering_left_joint" type="revolute">
    <parent link="body_link"/>
    <child link="steering_left_link"/>
    <origin rpy="0 0 0" xyz="0.31398 0.676917 -0.5781200000000001"/>
    <axis xyz="0 0 1"/>
    <limit effort="5.0" lower="-0.785" upper="0.785" velocity="1000.0"/>
  </joint>
  <joint name="steering_right_joint" type="revolute">
    <parent link="body_link"/>
    <child link="steering_right_link"/>
    <origin rpy="0 0 0" xyz="0.31398 -0.676917 -0.5781200000000001"/>
    <axis xyz="0 0 1"/>
    <limit effort="5.0" lower="-0.785" upper="0.785" velocity="1000.0"/>
  </joint>
  <!--Front Wheels Joints -->
  <joint name="wheel_front_left_joint" type="continuous">
    <parent link="steering_left_link"/>
    <child link="wheel_front_left_link"/>
    <origin rpy="0 0 0" xyz="0 0.03 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="1000.0"/>
  </joint>
  <joint name="wheel_front_right_joint" type="continuous">
    <parent link="steering_right_link"/>
    <child link="wheel_front_right_link"/>
    <origin rpy="0 0 0" xyz="0 -0.03 0"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="1000.0"/>
  </joint>
  <!--  Rear Wheels Joints -->
  <joint name="wheel_rear_left_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel_rear_left_link"/>
    <origin rpy="0 0 0" xyz="-0.354123 0.676917 -0.5781200000000001"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="1000.0"/>
  </joint>
  <joint name="wheel_rear_right_joint" type="continuous">
    <parent link="body_link"/>
    <child link="wheel_rear_right_link"/>
    <origin rpy="0 0 0" xyz="-0.354123 -0.676917 -0.5781200000000001"/>
    <axis xyz="0 1 0"/>
    <limit effort="10.0" velocity="1000.0"/>
  </joint>
  <!-- Link -->
  <link name="imu_link">
    <inertial>
      <origin rpy="0.0009 0.0007 0.0003" xyz="0 0 0"/>
      <mass value="0.011352005096910034"/>
      <inertia ixx="4.417895181776976e-08" ixy="1.772271240247652e-09" ixz="3.0915776324453116e-10" iyy="2.7136906330486448e-08" iyz="1.9975539330428303e-11" izz="6.995430697342334e-08"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/imu.stl"/>
      </geometry>
      <material name="grey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/imu.stl"/>
      </geometry>
      <material name="grey"/>
    </collision>
  </link>
  <!-- Joint-->
  <joint name="imu_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 -0.5781200000000001"/>
    <parent link="body_link"/>
    <child link="imu_link"/>
  </joint>
  <!-- Plugin-->
  <gazebo reference="imu_link">
    <sensor name="imu" type="imu">
      <always_on>true</always_on>
      <update_rate>100</update_rate>
      <imu>
        <angular_velocity>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>2e-4</stddev>
            </noise>
          </z>
        </angular_velocity>
        <linear_acceleration>
          <x>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </x>
          <y>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </y>
          <z>
            <noise type="gaussian">
              <mean>0.0</mean>
              <stddev>1.7e-2</stddev>
            </noise>
          </z>
        </linear_acceleration>
      </imu>
      <plugin filename="libgazebo_ros_imu_sensor.so" name="imu"/>
    </sensor>
  </gazebo>
  <!-- Links -->
  <!-- Reference link for the fused pointcloud-->
  <link name="central_lidar_link">
    <inertial>
      <origin rpy="0.0330 -0.0053 0.0649" xyz="0 0 0"/>
      <mass value="0.21203350920404773"/>
      <inertia ixx="0.011147881277066674" ixy="2.5242109472028173e-05" ixz="-0.0001421632368715965" iyy="0.01111192455712341" iyz="4.152678017456252e-05" izz="0.0006292909214225758"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/scan.obj"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/scan.stl"/>
      </geometry>
    </collision>
  </link>
  <joint name="body_central_lidar_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.8951199999999999"/>
    <parent link="body_link"/>
    <child link="central_lidar_link"/>
  </joint>
  <link name="lidar_front_left_support_link">
    <inertial>
      <origin rpy="-0.0019 -0.0000 0.0658" xyz="0 0 0"/>
      <mass value="0.28590020390563653"/>
      <inertia ixx="0.000762452760169552" ixy="-7.066832712187747e-07" ixz="6.444761162481759e-06" iyy="0.000749768395733118" iyz="6.301900964921601e-07" izz="0.00045580963102950615"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0.785" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.obj"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0.785" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.stl"/>
      </geometry>
    </collision>
  </link>
  <link name="lidar_front_left_link"/>
  <joint name="lidar_front_left_support_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.72184 0.679109 0.4174"/>
    <parent link="body_link"/>
    <child link="lidar_front_left_support_link"/>
  </joint>
  <joint name="lidar_front_left_joint" type="fixed">
    <origin rpy="0 0 0.785" xyz="0.72184 0.679109 0.5073999999999999"/>
    <parent link="body_link"/>
    <child link="lidar_front_left_link"/>
  </joint>
  <link name="lidar_front_right_support_link">
    <inertial>
      <origin rpy="-0.0019 -0.0000 0.0658" xyz="0 0 0"/>
      <mass value="0.28590020390563653"/>
      <inertia ixx="0.000762452760169552" ixy="-7.066832712187747e-07" ixz="6.444761162481759e-06" iyy="0.000749768395733118" iyz="6.301900964921601e-07" izz="0.00045580963102950615"/>
    </inertial>
    <visual>
      <origin rpy="0 0 -0.785" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.obj"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 -0.785" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.stl"/>
      </geometry>
    </collision>
  </link>
  <link name="lidar_front_right_link"/>
  <joint name="lidar_front_right_support_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.72184 -0.679109 0.4174"/>
    <parent link="body_link"/>
    <child link="lidar_front_right_support_link"/>
  </joint>
  <joint name="lidar_front_right_joint" type="fixed">
    <origin rpy="0 0 -0.785" xyz="0.72184 -0.679109 0.5073999999999999"/>
    <parent link="body_link"/>
    <child link="lidar_front_right_link"/>
  </joint>
  <link name="lidar_rear_left_support_link">
    <inertial>
      <origin rpy="-0.0019 -0.0000 0.0658" xyz="0 0 0"/>
      <mass value="0.28590020390563653"/>
      <inertia ixx="0.000762452760169552" ixy="-7.066832712187747e-07" ixz="6.444761162481759e-06" iyy="0.000749768395733118" iyz="6.301900964921601e-07" izz="0.00045580963102950615"/>
    </inertial>
    <visual>
      <origin rpy="0 0 2.355" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.obj"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 2.355" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.stl"/>
      </geometry>
    </collision>
  </link>
  <link name="lidar_rear_left_link"/>
  <joint name="lidar_rear_left_support_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.72184 0.679109 0.4174"/>
    <parent link="body_link"/>
    <child link="lidar_rear_left_support_link"/>
  </joint>
  <joint name="lidar_rear_left_joint" type="fixed">
    <origin rpy="0 0 2.355" xyz="-0.72184 0.679109 0.5073999999999999"/>
    <parent link="body_link"/>
    <child link="lidar_rear_left_link"/>
  </joint>
  <link name="lidar_rear_right_support_link">
    <inertial>
      <origin rpy="-0.0019 -0.0000 0.0658" xyz="0 0 0"/>
      <mass value="0.28590020390563653"/>
      <inertia ixx="0.000762452760169552" ixy="-7.066832712187747e-07" ixz="6.444761162481759e-06" iyy="0.000749768395733118" iyz="6.301900964921601e-07" izz="0.00045580963102950615"/>
    </inertial>
    <visual>
      <origin rpy="0 0 -2.355" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.obj"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 -2.355" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://deliverybot_description/meshes/lidar.stl"/>
      </geometry>
    </collision>
  </link>
  <link name="lidar_rear_right_link"/>
  <joint name="lidar_rear_right_support_joint" type="fixed">
    <origin rpy="0 0 0" xyz="-0.72184 -0.679109 0.4174"/>
    <parent link="body_link"/>
    <child link="lidar_rear_right_support_link"/>
  </joint>
  <joint name="lidar_rear_right_joint" type="fixed">
    <origin rpy="0 0 -2.355" xyz="-0.72184 -0.679109 0.5073999999999999"/>
    <parent link="body_link"/>
    <child link="lidar_rear_right_link"/>
  </joint>
  <gazebo reference="lidar_front_left_link">
    <sensor name="lidar_front_left" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>1</resolution>
            <min_angle>-1.04</min_angle>
            <!-- -60 degrees -->
            <max_angle>1.04</max_angle>
            <!-- 60 degrees -->
          </horizontal>
          <vertical>
            <samples>32</samples>
            <resolution>1</resolution>
            <min_angle>-0.436</min_angle>
            <!-- -25 degrees -->
            <max_angle>0.1308</max_angle>
            <!-- 7.5 degrees -->
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.02</resolution>
        </range>
        <!-- <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise> -->
      </ray>
      <!-- GAZEBO CLASSIC PLUGIN-->
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_lidar_front_left_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=lidar_front_left/points</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lidar_front_left_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_front_right_link">
    <sensor name="lidar_front_right" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>1</resolution>
            <min_angle>-1.04</min_angle>
            <!-- -60 degrees -->
            <max_angle>1.04</max_angle>
            <!-- 60 degrees -->
          </horizontal>
          <vertical>
            <samples>32</samples>
            <resolution>1</resolution>
            <min_angle>-0.436</min_angle>
            <!-- -25 degrees -->
            <max_angle>0.1308</max_angle>
            <!-- 7.5 degrees -->
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.02</resolution>
        </range>
        <!-- <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise> -->
      </ray>
      <!-- GAZEBO CLASSIC PLUGIN-->
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_lidar_front_right_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=lidar_front_right/points</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lidar_front_right_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_rear_left_link">
    <sensor name="lidar_rear_left" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>1</resolution>
            <min_angle>-1.04</min_angle>
            <!-- -60 degrees -->
            <max_angle>1.04</max_angle>
            <!-- 60 degrees -->
          </horizontal>
          <vertical>
            <samples>32</samples>
            <resolution>1</resolution>
            <min_angle>-0.436</min_angle>
            <!-- -25 degrees -->
            <max_angle>0.1308</max_angle>
            <!-- 7.5 degrees -->
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.02</resolution>
        </range>
        <!-- <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise> -->
      </ray>
      <!-- GAZEBO CLASSIC PLUGIN-->
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_lidar_rear_left_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=lidar_rear_left/points</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lidar_rear_left_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <gazebo reference="lidar_rear_right_link">
    <sensor name="lidar_rear_right" type="gpu_ray">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <always_on>true</always_on>
      <update_rate>5</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>100</samples>
            <resolution>1</resolution>
            <min_angle>-1.04</min_angle>
            <!-- -60 degrees -->
            <max_angle>1.04</max_angle>
            <!-- 60 degrees -->
          </horizontal>
          <vertical>
            <samples>32</samples>
            <resolution>1</resolution>
            <min_angle>-0.436</min_angle>
            <!-- -25 degrees -->
            <max_angle>0.1308</max_angle>
            <!-- 7.5 degrees -->
          </vertical>
        </scan>
        <range>
          <min>0.10</min>
          <max>20.0</max>
          <resolution>0.02</resolution>
        </range>
        <!-- <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise> -->
      </ray>
      <!-- GAZEBO CLASSIC PLUGIN-->
      <plugin filename="libgazebo_ros_ray_sensor.so" name="gazebo_ros_lidar_rear_right_controller">
        <ros>
          <namespace>/</namespace>
          <remapping>~/out:=lidar_rear_right/points</remapping>
        </ros>
        <output_type>sensor_msgs/PointCloud2</output_type>
        <frame_name>lidar_rear_right_link</frame_name>
      </plugin>
    </sensor>
  </gazebo>
  <!-- LINKS -->
  <link name="depth_camera_link">
    <visual>
      <geometry>
        <box size="0.010 0.3 0.03"/>
      </geometry>
      <material name="white"/>
    </visual>
  </link>
  <link name="depth_camera_optical_link"/>
  <!-- JOINTS-->
  <joint name="depth_camera_joint" type="fixed">
    <parent link="body_link"/>
    <child link="depth_camera_link"/>
    <origin rpy="0.0 0.0 0.0" xyz="0.79739 0.0 0.5213999999999999"/>
  </joint>
  <joint name="depth_camera_optical_joint" type="fixed">
    <parent link="depth_camera_link"/>
    <child link="depth_camera_optical_link"/>
    <origin rpy="-1.57 0 -1.57" xyz="0.011 0 0"/>
  </joint>
  <gazebo reference="depth_camera_link">
    <material>Gazebo/Red</material>
    <sensor name="depth_camera" type="depth">
      <!-- Depth camera-->
      <pose> 0 0 0 0 0 0 </pose>
      <visualize>true</visualize>
      <update_rate>10</update_rate>
      <camera>
        <horizontal_fov>1.089</horizontal_fov>
        <image>
          <format>B8G8R8</format>
          <!-- HERE we swap the channels from  RGB to BGR-->
          <width>640</width>
          <height>480</height>
        </image>
        <clip>
          <near>0.05</near>
          <far>8.0</far>
        </clip>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <frame_name>depth_camera_optical_link</frame_name>
        <min_depth>0.1</min_depth>
        <!-- Minimum distance from the camera at which objects can be detected - filters out too close objects-->
        <max_depth>100.0</max_depth>
        <!-- Maximum distance from the camera at which objects can be detected - filters out too far objects-->
      </plugin>
    </sensor>
  </gazebo>
  <!-- Gazebo friction and materials 
    - mu1  friction in the direction of motion
    - mu2  friction in the direction perpendicular to motion
    - kp  spring stiffness (surface penetration coeff). High value = no penetration, stiff surface
    - kd  damping coefficient. Controls the damping of the contact response or joint movement
    - fdir1  friction direction. Primary direction of the frictional force (direction of the motion)
    -->
  <gazebo reference="body_link">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
  </gazebo>
  <gazebo reference="wheel_front_left_link">
    <mu1 value="10.0"/>
    <mu2 value="8.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <gazebo reference="wheel_front_right_link">
    <mu1 value="10.0"/>
    <mu2 value="8.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <gazebo reference="wheel_rear_left_link">
    <mu1 value="10.0"/>
    <mu2 value="8.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <gazebo reference="wheel_rear_right_link">
    <mu1 value="10.0"/>
    <mu2 value="8.0"/>
    <kp value="10000000.0"/>
    <kd value="1.0"/>
    <fdir1 value="1 0 0"/>
  </gazebo>
  <!-- Actuator configurations -->
  <!--   <transmission name="steering_left_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="steering_left_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="steering_left_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  
  <transmission name="steering_right_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="steering_right_joint">
      <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
    </joint>
    <actuator name="steering_right_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  
  <transmission name="rear_left_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_rear_left_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_left_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  
  <transmission name="rear_right_transmission" type="SimpleTransmission">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="wheel_rear_right_joint">
      <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="rear_right_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>  -->
  <gazebo>
    <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
      <robot_param>robot_description</robot_param>
      <robot_param_node>robot_state_publisher</robot_param_node>
      <parameters>/home/next/ros2_deliverybot_ws/install/deliverybot_controllers/share/deliverybot_controllers/config/ackermann_controllers_config.yaml</parameters>
      <ros>
        <remapping>ackermann_steering_controller/reference:=cmd_vel_ack_stamped</remapping>
        <remapping>ackermann_steering_controller/odometry:=odom</remapping>
        <remapping>ackermann_steering_controller/tf_odometry:=tf</remapping>
        <robot_base_frame>base_link</robot_base_frame>
      </ros>
    </plugin>
  </gazebo>
  <!-- Ros2 control -->
  <ros2_control name="Gazebo_classic_System" type="system">
    <hardware>
      <plugin>gazebo_ros2_control/GazeboSystem</plugin>
    </hardware>
    <!-- COMMON INTERFACES -->
    <!-- <joint name="steering_left_joint">
            <command_interface name="position"/>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

        <joint name="steering_right_joint">
            <command_interface name="position"/>
            <state_interface name="position"/>
            <state_interface name="velocity"/>
        </joint>

        <joint name="wheel_rear_left_joint">
            <command_interface name="velocity"/>
            <state_interface name="velocity"/>
            <state_interface name="position"/>
        </joint>

        <joint name="wheel_rear_right_joint">
            <command_interface name="velocity"/>
            <state_interface name="velocity"/>
            <state_interface name="position"/>
        </joint> -->
    <!-- Steering wheels -->
    <joint name="steering_left_joint">
      <command_interface name="position">
        <param name="min">-0.785</param>
        <param name="max">0.785</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="steering_right_joint">
      <command_interface name="position">
        <param name="min">-0.785</param>
        <param name="max">0.785</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <!-- Rear wheels -->
    <joint name="wheel_rear_left_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="wheel_rear_right_joint">
      <command_interface name="velocity">
        <param name="min">-1</param>
        <param name="max">1</param>
      </command_interface>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <!-- Front wheels -->
    <joint name="wheel_front_left_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="wheel_front_right_joint">
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>
</robot>
